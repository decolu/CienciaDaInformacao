{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ferna\\\\Desktop\\\\CIN Andr\\xE9\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\ferna\\\\Desktop\\\\CIN Andr\\xE9\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\n\nvar _c0 = function _c0(a1) {\n  return [\"/lists\", a1];\n};\n\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 11);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var list_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r2._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r2.title);\n  }\n}\n\nfunction TaskViewComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var trip_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(trip_r3.title);\n  }\n}\n\nexport var TaskViewComponent = /*#__PURE__*/(function () {\n  var TaskViewComponent = /*#__PURE__*/function () {\n    function TaskViewComponent(taskService, route, router) {\n      _classCallCheck(this, TaskViewComponent);\n\n      this.taskService = taskService;\n      this.route = route;\n      this.router = router;\n    }\n\n    _createClass(TaskViewComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.route.params.subscribe(function (params) {\n          if (params.listId) {\n            _this.selectedListId = params.listId;\n\n            _this.taskService.getTasks(params.listId).subscribe(function (tasks) {\n              _this.tasks = tasks;\n            });\n          } else {\n            _this.tasks = undefined;\n          }\n        });\n        this.taskService.getLists().subscribe(function (lists) {\n          _this.lists = lists;\n        });\n      }\n    }, {\n      key: \"onTaskClick\",\n      value: function onTaskClick(task) {\n        // we want to set the task to completed\n        this.taskService.complete(task).subscribe(function () {\n          // the task has been set to completed successfully\n          task.completed = !task.completed;\n        });\n      }\n    }, {\n      key: \"onDeleteListClick\",\n      value: function onDeleteListClick() {\n        var _this2 = this;\n\n        this.taskService.deleteList(this.selectedListId).subscribe(function (res) {\n          _this2.router.navigate(['/lists']);\n\n          console.log(res);\n        });\n      }\n    }, {\n      key: \"onDeleteTaskClick\",\n      value: function onDeleteTaskClick(id) {\n        var _this3 = this;\n\n        this.taskService.deleteTask(this.selectedListId, id).subscribe(function (res) {\n          _this3.tasks = _this3.tasks.filter(function (val) {\n            return val._id !== id;\n          });\n          console.log(res);\n        });\n      }\n    }]);\n\n    return TaskViewComponent;\n  }();\n\n  TaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n    return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  TaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskViewComponent,\n    selectors: [[\"app-task-view\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[1, \"Central\"], [1, \"Administrativo\"], [1, \"SideBar\"], [1, \"TituloPrimario\"], [1, \"Lista\"], [\"class\", \"CidadesLista\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"BotaoPrincipal\"], [1, \"PontosTuristicos\", \"has-background-grey-light\"], [\"class\", \"trip\", 4, \"ngFor\", \"ngForOf\"], [1, \"add-trip\", \"button\", \"is-primary\"], [\"src\", \"../../../assets/botao-adicionar (1).png\"], [\"routerLinkActive\", \"is-active\", 1, \"CidadesLista\", 3, \"routerLink\"], [1, \"trip\"]],\n    template: function TaskViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"H1\", 3);\n        i0.ɵɵtext(4, \" Cidades para viajar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵtext(8, \"Adicionar Cidade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"H1\", 3);\n        i0.ɵɵtext(11, \" Pontos turisticos que quero conhecer \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, TaskViewComponent_div_12_Template, 3, 1, \"div\", 8);\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵelement(14, \"img\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.trips);\n      }\n    },\n    styles: [\".Administrativo[_ngcontent-%COMP%]{display:flex;width:100%;height:100%;max-width:800px;max-height:600px}.SideBar[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:250px;background:white;padding:42px;border-top-left-radius:8px;border-bottom-left-radius:8px}.PontosTuristicos[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-grow:1;padding:42px;border-top-right-radius:8px;border-bottom-right-radius:8px}.TituloPrimario[_ngcontent-%COMP%]{font-family:Cambria;font-size:22px;text-transform:uppercase;letter-spacing:2px}.Lista[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:16px;flex-grow:1}.Lista[_ngcontent-%COMP%]   .CidadesLista[_ngcontent-%COMP%]{display:flex;align-items:center;padding:12px 15px;width:100%;margin-bottom:5px}.Lista[_ngcontent-%COMP%]   .CidadesLista[_ngcontent-%COMP%]:hover{background:lightcoral}.Lista[_ngcontent-%COMP%]   .CidadesLista.is-active[_ngcontent-%COMP%]{background-color:#d3d3d3}.trip[_ngcontent-%COMP%]{background:white;margin-top:16px;padding:12px 18px}.trip[_ngcontent-%COMP%]:not(.complete):active{transform:scale(.9)}.trip[_ngcontent-%COMP%]:not(.complete):hover{background:lightgray}.trip.complete[_ngcontent-%COMP%]{text-decoration:line-through;opacity:70%}.add-trip[_ngcontent-%COMP%]{position:absolute;bottom:20%;right:30%;height:50px;width:50px;background:#D93D3B;border:none}\"]\n  });\n  return TaskViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}