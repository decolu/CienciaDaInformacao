{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ferna\\\\projetos\\\\projeto-prototipagem\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\ferna\\\\projetos\\\\projeto-prototipagem\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nvar _c0 = function _c0(a1) {\n  return [\"/lists\", a1];\n};\n\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var list_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r3._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r3.title);\n  }\n}\n\nfunction TaskViewComponent_div_10_h3_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 23);\n    i0.ɵɵtext(1, \"Ainda n\\xE3o tem nenhuma tarefa aqui!\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3, \"Clique no bot\\xE3o de add para criar uma nova tarefa.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nvar _c1 = function _c1(a1) {\n  return [\"/edit-list\", a1];\n};\n\nfunction TaskViewComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵelementStart(2, \"h1\", 3);\n    i0.ɵɵtext(3, \" Tarefas \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11);\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵelementStart(6, \"button\", 13);\n    i0.ɵɵelementStart(7, \"span\", 14);\n    i0.ɵɵelement(8, \"i\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 16);\n    i0.ɵɵelementStart(10, \"div\", 17);\n    i0.ɵɵelementStart(11, \"a\", 18);\n    i0.ɵɵtext(12, \" Editar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_10_Template_a_click_13_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onDeleteListClick();\n    });\n    i0.ɵɵtext(14, \" Deletar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, TaskViewComponent_div_10_h3_15_Template, 4, 0, \"h3\", 20);\n    i0.ɵɵelementStart(16, \"button\", 21);\n    i0.ɵɵelement(17, \"img\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.selectedListId));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tasks.length === 0);\n  }\n}\n\nfunction TaskViewComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h3\", 23);\n    i0.ɵɵtext(2, \"Por favor selecione a lista ao lado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var TaskViewComponent = /*#__PURE__*/(function () {\n  var TaskViewComponent = /*#__PURE__*/function () {\n    function TaskViewComponent(taskService, route, router) {\n      _classCallCheck(this, TaskViewComponent);\n\n      this.taskService = taskService;\n      this.route = route;\n      this.router = router;\n    }\n\n    _createClass(TaskViewComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.route.params.subscribe(function (params) {\n          if (params.listId) {\n            _this.selectedListId = params.listId;\n\n            _this.taskService.getTasks(params.listId).subscribe(function (tasks) {\n              _this.tasks = tasks;\n            });\n          } else {\n            _this.tasks = undefined;\n          }\n        });\n        this.taskService.getLists().subscribe(function (lists) {\n          _this.lists = lists;\n        });\n      }\n    }, {\n      key: \"onTaskClick\",\n      value: function onTaskClick(task) {\n        // we want to set the task to completed\n        this.taskService.complete(task).subscribe(function () {\n          // the task has been set to completed successfully\n          console.log(\"Completed successully!\");\n          task.completed = !task.completed;\n        });\n      }\n    }, {\n      key: \"onDeleteListClick\",\n      value: function onDeleteListClick() {\n        var _this2 = this;\n\n        this.taskService.deleteList(this.selectedListId).subscribe(function (res) {\n          _this2.router.navigate(['/lists']);\n\n          console.log(res);\n        });\n      }\n    }, {\n      key: \"onDeleteTaskClick\",\n      value: function onDeleteTaskClick(id) {\n        var _this3 = this;\n\n        this.taskService.deleteTask(this.selectedListId, id).subscribe(function (res) {\n          _this3.tasks = _this3.tasks.filter(function (val) {\n            return val._id !== id;\n          });\n          console.log(res);\n        });\n      }\n    }]);\n\n    return TaskViewComponent;\n  }();\n\n  TaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n    return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  TaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskViewComponent,\n    selectors: [[\"app-task-view\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [4, \"ngIf\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [1, \"top-bar\"], [1, \"dropdown\", \"is-hoverable\", \"is-right\"], [1, \"dropdown-trigger\"], [\"aria-haspopup\", \"true\", \"aria-controls\", \"dropdown-menu4\", 1, \"button\"], [1, \"icon\", \"is-small\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-cog\"], [\"id\", \"dropdown-menu4\", \"role\", \"menu\", 1, \"dropdown-menu\"], [1, \"dropdown-content\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"dropdown-item\", \"has-text-danger\", 3, \"click\"], [\"class\", \"empty-state-text\", 4, \"ngIf\"], [\"routerLink\", \"./new-task\", 1, \"circle-add-button\", \"button\", \"is-primary\"], [\"src\", \"../../../assets/plus-icon.svg\", 1, \"has-text-white\"], [1, \"empty-state-text\"]],\n    template: function TaskViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h1\", 3);\n        i0.ɵɵtext(4, \" Lista de Tarefas \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵtext(8, \"+ Nova lista\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵtemplate(10, TaskViewComponent_div_10_Template, 18, 4, \"div\", 8);\n        i0.ɵɵtemplate(11, TaskViewComponent_div_11_Template, 3, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.tasks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.tasks);\n      }\n    },\n    directives: [i3.NgForOf, i2.RouterLinkWithHref, i2.RouterLinkActive, i2.RouterLink, i3.NgIf],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700\\\";html[_ngcontent-%COMP%]{background:linear-gradient(to right top,#ff6e7f,#26a0da)}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%;scrollbar-width:thin;scrollbar-color:blue orange}body[_ngcontent-%COMP%]::-webkit-scrollbar{width:5px}body[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#a9a9a9}.centered-content[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;width:100%;height:100%}.modal-box[_ngcontent-%COMP%]{min-height:200px;width:100%;max-width:580px;background:white;border-radius:5px;padding:35px}.title[_ngcontent-%COMP%]{font-family:Lato;font-size:24px;text-transform:uppercase;letter-spacing:2px}.white-box[_ngcontent-%COMP%]{padding:35px;background:white;border-radius:5px;width:350px;max-width:350px}[_ngcontent-%COMP%]::-webkit-scrollbar{width:5px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#a1fee7}.task-manager-container[_ngcontent-%COMP%]{display:flex;width:100%;height:100%;max-width:1000px;max-height:680px}.sidebar[_ngcontent-%COMP%]{display:flex;flex-direction:column;min-width:250px;max-width:250px;background:white;padding:42px;border-top-left-radius:8px;border-bottom-left-radius:8px}.task-list-container[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;flex-grow:1;padding:42px;border-top-right-radius:8px;border-bottom-right-radius:8px}.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%]{margin-bottom:20px;display:flex}.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{flex-grow:1;margin:0}.task-item-container[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;overflow-y:auto;min-height:480px;max-height:480px}.task-item-container[_ngcontent-%COMP%]   .task[_ngcontent-%COMP%]{justify-content:space-around;width:315px;margin:5px}.list-menu[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:15px;flex-grow:1;overflow-y:auto}.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]{display:flex;align-items:center;padding:10px 15px;border-radius:5px;width:100%;color:#5f5f5f;margin-bottom:5px}.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover{background:#ddd4fd}.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%]{background-color:#9b8ad8;color:#fff}.task[_ngcontent-%COMP%]{display:flex;background:white;height:150px;padding:15px 20px;border-radius:5px;margin-top:10px;align-items:center}.task[_ngcontent-%COMP%]:not(.complete){cursor:pointer;transition:box-shadow .2s ease,transform .2s ease}.task[_ngcontent-%COMP%]:not(.complete):active{transform:scale(.95)}.task[_ngcontent-%COMP%]:not(.complete):hover{box-shadow:0 0 0 5px #eee}.task[_ngcontent-%COMP%]:not(.complete):hover   .task-buttons[_ngcontent-%COMP%]{opacity:1;transform:scale(1)}.task[_ngcontent-%COMP%]:not(.complete):hover   .check-box[_ngcontent-%COMP%]{display:flex;border:2px solid #26da86;border-radius:50%;height:30px;width:30px;margin-right:20px;background-color:#26da86;transition:background-color 1s}.task[_ngcontent-%COMP%]:not(.complete):hover   .check-box[_ngcontent-%COMP%]   i.material-icons[_ngcontent-%COMP%]{opacity:1}.task.completed[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%]{text-decoration:line-through;opacity:.8}.task[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%]{display:flex;flex-grow:1}.task[_ngcontent-%COMP%]   .task-buttons[_ngcontent-%COMP%]{transition:opacity .2s,transform .2s;opacity:0;transform:scale(.85);margin-right:20px}.circle-add-button[_ngcontent-%COMP%]{position:absolute;bottom:35px;right:35px;height:50px;width:50px;border-radius:50%}.empty-state-text[_ngcontent-%COMP%]{font-size:20px;color:#777;text-align:center}.todo-controls-box[_ngcontent-%COMP%]   .todo-control-button[_ngcontent-%COMP%]{padding:10px 20px;display:flex}.todo-controls-box[_ngcontent-%COMP%]   .todo-control-button[_ngcontent-%COMP%]   i.material-icons[_ngcontent-%COMP%]{font-size:30px}.edit-option[_ngcontent-%COMP%]:hover{color:#26a0da}.delete-option[_ngcontent-%COMP%]:hover{color:#ff6e7f}\"]\n  });\n  return TaskViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}